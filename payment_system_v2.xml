<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>
// Global clocks
clock globalTime;
clock t;  // Transaction timing clock

// Constants
const int MAX_RETRY = 3;
const int NUM_TRANSACTIONS = 2;
const int MAX_REPLAYS = 2;  // Maximum number of times a transaction can be replayed

// Shared variables
bool resource_locked = false;  // Indicates if payment resource is locked
int total_transactions = 0;

// Transaction tracking and duplicate detection
bool processed_txn_ids[NUM_TRANSACTIONS] = {false, false}; // false = not processed, true = processed
bool duplicate_detected = false;  // Set when duplicate attempt is detected

// Arrays for transaction properties
int retry_count[NUM_TRANSACTIONS] = {0, 0};
int amount[NUM_TRANSACTIONS] = {100, 100}; // Example initial values

// Channels for synchronization
broadcast chan request_resource;   // Transaction requests resource
broadcast chan release_resource;   // Transaction releases resource
broadcast chan retry;             // Signal for retry
broadcast chan duplicate_alert;    // Signal for duplicate detection
broadcast chan failure_notify;    // Signal that transaction has failed conclusively
broadcast chan new_transaction;   // Signal to start a new transaction

// Failure tracking
int failed_transactions = 0;      // Count of conclusively failed transactions
	</declaration>
	<template>
		<name>Transaction</name>
		<parameter>const int id</parameter>
		<declaration>// Local declarations
bool is_duplicate = false;</declaration>
		<location id="id0" x="-510" y="272">
			<name x="-536" y="238">Start</name>
			<committed/>
		</location>
		<location id="id1" x="-136" y="272">
			<name x="-229" y="238">Requesting</name>
			<label kind="invariant" x="-212" y="272">t &lt;= 10</label>
		</location>
		<location id="id2" x="272" y="272">
			<name x="280" y="238">Processing</name>
			<label kind="invariant" x="289" y="272">t &lt;= 5</label>
		</location>
		<location id="id3" x="714" y="272">
			<name x="731" y="255">Success</name>
		</location>
		<location id="id4" x="272" y="425">
			<name x="289" y="408">Timeout</name>
			<label kind="invariant" x="289" y="425">t &lt;= 2</label>
		</location>
		<location id="id5" x="-510" y="408">
			<name x="-587" y="425">DuplicateDetected</name>
		</location>
		<init ref="id0"/>
		<transition id="id6">
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="-245" y="545">t == 2</label>
			<label kind="synchronisation" x="-245" y="562">failure_notify!</label>
			<label kind="assignment" x="-245" y="579">failed_transactions++,
retry_count[id] = 0</label>
			<nail x="272" y="544"/>
			<nail x="-646" y="544"/>
			<nail x="-646" y="272"/>
		</transition>
		<transition id="id7">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-433" y="213">processed_txn_ids[id] == false</label>
			<label kind="assignment" x="-433" y="230">t = 0, 
retry_count[id] = 0</label>
		</transition>
		<transition id="id8">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-68" y="272">!resource_locked &amp;&amp; amount[id] &gt; 0</label>
			<label kind="synchronisation" x="-68" y="289">request_resource!</label>
			<label kind="assignment" x="-68" y="306">resource_locked = true, 
t = 0</label>
		</transition>
		<transition id="id9">
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="59" y="425">t == 10</label>
			<nail x="-136" y="425"/>
		</transition>
		<transition id="id10">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="guard" x="280" y="306">t == 5 &amp;&amp; retry_count[id] &gt;= MAX_RETRY</label>
			<label kind="synchronisation" x="280" y="323">release_resource!</label>
			<label kind="assignment" x="280" y="340">resource_locked = false,
t = 0</label>
		</transition>
		<transition id="id11">
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-34" y="42">t == 5 &amp;&amp; retry_count[id] &lt; MAX_RETRY</label>
			<label kind="synchronisation" x="-34" y="59">retry!</label>
			<label kind="assignment" x="-34" y="76">resource_locked = false,
retry_count[id]++,
t = 0</label>
			<nail x="204" y="136"/>
			<nail x="-68" y="136"/>
		</transition>
		<transition id="id12">
			<source ref="id0"/>
			<target ref="id5"/>
			<label kind="guard" x="-501" y="297">processed_txn_ids[id] == true</label>
			<label kind="synchronisation" x="-501" y="314">duplicate_alert!</label>
			<label kind="assignment" x="-501" y="331">is_duplicate = true,
duplicate_detected = true</label>
		</transition>
		<transition id="id13">
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="417" y="170">t &lt; 5</label>
			<label kind="synchronisation" x="417" y="187">release_resource!</label>
			<label kind="assignment" x="417" y="204">resource_locked = false,
total_transactions++,
processed_txn_ids[id] = true</label>
		</transition>
	</template>
	<template>
		<name>ResourceManager</name>
		<location id="id14" x="-161" y="0">
			<name x="-255" y="-17">Available</name>
		</location>
		<location id="id15" x="100" y="0">
			<name x="119" y="-17">InUse</name>
		</location>
		<init ref="id14"/>
		<transition id="id16">
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-102" y="-93">request_resource?</label>
			<nail x="-102" y="-68"/>
			<nail x="34" y="-68"/>
		</transition>
		<transition id="id17">
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-102" y="68">release_resource?</label>
			<nail x="34" y="68"/>
			<nail x="-102" y="68"/>
		</transition>
	</template>
	<system>
// Process instantiation
Transaction0 = Transaction(0);
Transaction1 = Transaction(1);
Resource = ResourceManager();

// System composition
system Transaction0, Transaction1, Resource;
	</system>
	<queries>
		<option key="--diagnostic" value="0"/>
		<query>
			<formula>A[] not (Transaction0.Success and Transaction1.Success and processed_txn_ids[0] == false)</formula>
			<comment>If a transaction reaches Success, it must be marked as processed</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:29:07 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[] forall (i:int[0,NUM_TRANSACTIONS-1]) retry_count[i] &lt;= MAX_RETRY</formula>
			<comment>Retry count never exceeds maximum limit</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:27:21 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[] not (Transaction0.Success and processed_txn_ids[0] == 0)</formula>
			<comment>Successful transactions must be marked as processed</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:27:26 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; Transaction0.Success || Transaction1.Success</formula>
			<comment>There exist eventually a path where a transaction is completed successfully</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:27:34 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; Transaction0.Success &amp;&amp; Transaction1.Success</formula>
			<comment>There exists eventually a path where all transactions complete successfully</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:27:44 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[] (Transaction0.Processing imply t &lt;= 5)</formula>
			<comment>Time bound is respected in Processing state</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:28:01 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; Transaction0.Timeout and t &gt; 5</formula>
			<comment>System can timeout when processing takes too long</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:28:05 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; Transaction0.Timeout and Resource.InUse</formula>
			<comment>System can timeout when resource is unavailable</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:28:12 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[] (Transaction0.Timeout imply t &lt;= 2)</formula>
			<comment>System must not stay in Timeout state indefinitely</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:28:18 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[] (failed_transactions &lt;= NUM_TRANSACTIONS)</formula>
			<comment>Number of failed transactions cannot exceed total transactions</comment>
			<result outcome="success" type="quality" timestamp="2025-05-01 19:28:21 -0400">
				<option key="--diagnostic" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[] (Transaction0.Timeout imply retry_count[0] &gt;= MAX_RETRY)</formula>
			<comment>Timeout state is only reachable after maximum retries</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (Transaction0.Timeout and t == 2 imply Transaction0.Start)</formula>
			<comment>After timeout period, system returns to Start state</comment>
		</query>
		<query>
			<formula>A[] (Transaction0.Timeout and retry_count[0] &gt; 0) imply failed_transactions &gt; 0</formula>
			<comment>Failed retries must increment failed_transactions counter</comment>
		</query>
		<query>
			<formula>A[] (Transaction0.Start and retry_count[0] &gt; 0) imply processed_txn_ids[0] == true</formula>
			<comment>If retries occurred and back at Start, transaction must be marked as processed</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (failed_transactions &gt; 0 and !duplicate_detected)</formula>
			<comment>System can have failed transactions without duplicates</comment>
		</query>
		<query>
			<formula>A[] (Transaction0.Timeout imply resource_locked == false)</formula>
			<comment>Resources must be released when timeout occurs</comment>
		</query>
	</queries>
</nta>
